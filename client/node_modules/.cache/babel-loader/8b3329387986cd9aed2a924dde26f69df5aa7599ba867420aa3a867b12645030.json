{"ast":null,"code":"var _jsxFileName = \"/home/piyush-mishra-00/Projects/HealTether/client/src/components/Register.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport useForm from '../hooks/useForm';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const {\n    values,\n    handleChange,\n    handleSubmit\n  } = useForm({\n    name: '',\n    email: '',\n    password: ''\n  });\n  const registerUser = async () => {\n    try {\n      const response = await fetch('/api/users/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(values)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Handle success (e.g., redirect to login)\n      } else {\n        console.error(data.message);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleSubmit(e, registerUser),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: values.name,\n        onChange: handleChange,\n        placeholder: \"Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: values.email,\n        onChange: handleChange,\n        placeholder: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: values.password,\n        onChange: handleChange,\n        placeholder: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"Z9h58K5/Ff8HtP1xPAk15z3+NjY=\", false, function () {\n  return [useForm];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useForm","Link","jsxDEV","_jsxDEV","Register","_s","values","handleChange","handleSubmit","name","email","password","registerUser","response","fetch","method","headers","body","JSON","stringify","data","json","ok","console","error","message","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","type","value","onChange","placeholder","required","to","_c","$RefreshReg$"],"sources":["/home/piyush-mishra-00/Projects/HealTether/client/src/components/Register.js"],"sourcesContent":["import React from 'react';\nimport useForm from '../hooks/useForm';\nimport { Link } from 'react-router-dom';\n\nconst Register = () => {\n  const { values, handleChange, handleSubmit } = useForm({ name: '', email: '', password: '' });\n\n  const registerUser = async () => {\n    try {\n      const response = await fetch('/api/users/register', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(values),\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Handle success (e.g., redirect to login)\n      } else {\n        console.error(data.message);\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <div className=\"form-container\">\n      <h1>Register</h1>\n      <form onSubmit={(e) => handleSubmit(e, registerUser)}>\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={values.name}\n          onChange={handleChange}\n          placeholder=\"Name\"\n          required\n        />\n        <input\n          type=\"email\"\n          name=\"email\"\n          value={values.email}\n          onChange={handleChange}\n          placeholder=\"Email\"\n          required\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={values.password}\n          onChange={handleChange}\n          placeholder=\"Password\"\n          required\n        />\n        <button type=\"submit\">Register</button>\n      </form>\n      <p>Already have an account? <Link to=\"/login\">Login</Link></p>\n    </div>\n  );\n};\n\nexport default Register;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}